// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package graph

import (
	"github.com/google/uuid"
)

type DeleteTaskInput struct {
	TaskID string `json:"taskID"`
}

type DeleteTaskPayload struct {
	TaskID string `json:"taskID"`
}

type FindProject struct {
	ProjectID string `json:"projectId"`
}

type FindUser struct {
	UserID string `json:"userId"`
}

type LogoutUser struct {
	UserID string `json:"userID"`
}

type NewOrganization struct {
	Name string `json:"name"`
}

type NewProject struct {
	TeamID string `json:"teamID"`
	Name   string `json:"name"`
}

type NewRefreshToken struct {
	UserID string `json:"userId"`
}

type NewTask struct {
	TaskGroupID string  `json:"taskGroupID"`
	Name        string  `json:"name"`
	Position    float64 `json:"position"`
}

type NewTaskGroup struct {
	ProjectID string  `json:"projectID"`
	Name      string  `json:"name"`
	Position  float64 `json:"position"`
}

type NewTaskGroupLocation struct {
	TaskGroupID uuid.UUID `json:"taskGroupID"`
	Position    float64   `json:"position"`
}

type NewTaskLocation struct {
	TaskID      string  `json:"taskID"`
	TaskGroupID string  `json:"taskGroupID"`
	Position    float64 `json:"position"`
}

type NewTeam struct {
	Name           string `json:"name"`
	OrganizationID string `json:"organizationID"`
}

type NewUserAccount struct {
	Username    string `json:"username"`
	Email       string `json:"email"`
	DisplayName string `json:"displayName"`
	Password    string `json:"password"`
}

type ProjectsFilter struct {
	TeamID *string `json:"teamID"`
}

type UpdateTaskName struct {
	TaskID string `json:"taskID"`
	Name   string `json:"name"`
}
