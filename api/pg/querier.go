// Code generated by sqlc. DO NOT EDIT.

package pg

import (
	"context"

	"github.com/google/uuid"
)

type Querier interface {
	CreateOrganization(ctx context.Context, arg CreateOrganizationParams) (Organization, error)
	CreateProject(ctx context.Context, arg CreateProjectParams) (Project, error)
	CreateRefreshToken(ctx context.Context, arg CreateRefreshTokenParams) (RefreshToken, error)
	CreateTask(ctx context.Context, arg CreateTaskParams) (Task, error)
	CreateTaskGroup(ctx context.Context, arg CreateTaskGroupParams) (TaskGroup, error)
	CreateTeam(ctx context.Context, arg CreateTeamParams) (Team, error)
	CreateUserAccount(ctx context.Context, arg CreateUserAccountParams) (UserAccount, error)
	DeleteExpiredTokens(ctx context.Context) error
	DeleteRefreshTokenByID(ctx context.Context, tokenID uuid.UUID) error
	DeleteRefreshTokenByUserID(ctx context.Context, userID uuid.UUID) error
	DeleteTaskByID(ctx context.Context, taskID uuid.UUID) error
	DeleteTeamByID(ctx context.Context, teamID uuid.UUID) error
	GetAllOrganizations(ctx context.Context) ([]Organization, error)
	GetAllProjects(ctx context.Context) ([]Project, error)
	GetAllProjectsForTeam(ctx context.Context, teamID uuid.UUID) ([]Project, error)
	GetAllTaskGroups(ctx context.Context) ([]TaskGroup, error)
	GetAllTasks(ctx context.Context) ([]Task, error)
	GetAllTeams(ctx context.Context) ([]Team, error)
	GetAllUserAccounts(ctx context.Context) ([]UserAccount, error)
	GetProjectByID(ctx context.Context, projectID uuid.UUID) (Project, error)
	GetRefreshTokenByID(ctx context.Context, tokenID uuid.UUID) (RefreshToken, error)
	GetTaskGroupByID(ctx context.Context, taskGroupID uuid.UUID) (TaskGroup, error)
	GetTaskGroupsForProject(ctx context.Context, projectID uuid.UUID) ([]TaskGroup, error)
	GetTasksForTaskGroupID(ctx context.Context, taskGroupID uuid.UUID) ([]Task, error)
	GetTeamByID(ctx context.Context, teamID uuid.UUID) (Team, error)
	GetTeamsForOrganization(ctx context.Context, organizationID uuid.UUID) ([]Team, error)
	GetUserAccountByID(ctx context.Context, userID uuid.UUID) (UserAccount, error)
	GetUserAccountByUsername(ctx context.Context, username string) (UserAccount, error)
	UpdateTaskGroupLocation(ctx context.Context, arg UpdateTaskGroupLocationParams) (TaskGroup, error)
	UpdateTaskLocation(ctx context.Context, arg UpdateTaskLocationParams) (Task, error)
	UpdateTaskName(ctx context.Context, arg UpdateTaskNameParams) (Task, error)
}

var _ Querier = (*Queries)(nil)
